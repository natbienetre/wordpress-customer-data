<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>528</string>
	<key>AMApplicationVersion</key>
	<string>2.10</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Exécuter un script AppleScript</string>
				<key>ActionNameComment</key>
				<string>AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>-- This script is used to create a VFS token from an email address.-- Inputs:-- - email address-- Binary requirements:-- - jq (https://stedolan.github.io/jq/)-- - security (https://developer.apple.com/library/archive/documentation/Security/Conceptual/keychainServConcepts/chapters/AboutKeychains.html)-- - Contacts.app-- Additional requirements:-- - Having a password labeled "edit.natbienetre.fr" in macOS keychain.on run (input)	-- Get system language	set systemLanguage to do shell script "defaults read -globalDomain AppleLanguages " &amp; ¬		"| awk '{if (NR == 2) print $0}' " &amp; ¬		"| jq -r . " &amp; ¬		"| cut -d'-' -f1"		-- Get email address from Automator input	if (count of input) is 0 then		display dialog t("noEmailAddressProvided", systemLanguage) buttons {t("okButton", systemLanguage)} default button t("okButton", systemLanguage) with icon stop		return	end if	set emailAddress to item 1 of input		-- Search for contact in Contacts.app using the email address	tell application "Contacts"		-- Search for contacts with matching email		set matchingPeople to (every person whose value of emails contains emailAddress)				if (count of matchingPeople) is 0 then			display dialog t("errorContactRetrieval", systemLanguage) &amp; emailAddress buttons {t("okButton", systemLanguage)} default button t("okButton", systemLanguage) with icon stop			return		end if				-- Get the first matching contact		set selectedPerson to item 1 of matchingPeople	end tell		-- Get WordPress credentials from macOS Passwords.app	try		set wpUsername to do shell script "security find-generic-password -l 'edit.natbienetre.fr' " &amp; ¬			"| grep 'acct' " &amp; ¬			"| cut -d'=' -f2 " &amp; ¬			"| jq -r ."		set wpPassword to do shell script "security find-generic-password -a " &amp; quoted form of wpUsername &amp; " -l 'edit.natbienetre.fr' -w"		set wpUrl to do shell script "security find-generic-password -a " &amp; quoted form of wpUsername &amp; " -l 'edit.natbienetre.fr' " &amp; ¬			"| grep 'svce' " &amp; ¬			"| cut -d'=' -f2 " &amp; ¬			"| jq -r ."	on error errMsg		display dialog t("errorCredentialsRetrieval", systemLanguage) &amp; errMsg buttons {t("okButton", systemLanguage)} default button t("okButton", systemLanguage) with icon stop		return	end try		set credentials to wpUsername &amp; ":" &amp; wpPassword		-- Get contact information	set displayName to name of selectedPerson		-- Prepare the token creation data	set tokenData to do shell script "jq -n '{        \"user\": {            \"id\": $email,            \"displayName\": $displayName,            \"email\": $email        },        \"permissions\": [            \"read\",            \"write\"        ]    }'" &amp; ¬		" --arg displayName " &amp; quoted form of displayName &amp; ¬		" --arg email " &amp; quoted form of emailAddress	-- Call the WordPress API to create the token	try		set tokenResult to do shell script "curl -fsLX POST " &amp; wpUrl &amp; "/wp-json/vfs/v1/tokens " &amp; ¬			"-H 'Content-Type: application/json' " &amp; ¬			"--user " &amp; quoted form of credentials &amp; " " &amp; ¬			"-d '" &amp; tokenData &amp; "'" &amp; ¬			" | jq -r '.token'"	on error errMsg		display dialog t("errorTokenCreation", systemLanguage) &amp; errMsg buttons {t("okButton", systemLanguage)} default button t("okButton", systemLanguage) with icon stop		return	end try		set landingPage to "https://natbienetre.fr/mes-documents?vfs_token=" &amp; tokenResult		-- Copy the url to the clipboard	set the clipboard to landingPage		-- Display the notification	display dialog t("tokenCopied", systemLanguage) buttons {t("okButton", systemLanguage)} default button t("okButton", systemLanguage)end run-- Helper function to pad numbers with leading zeroson padNumber(n)	if n &lt; 10 then		return "0" &amp; n	else		return n as string	end ifend padNumber-- Helper function to get localized texton t(text, lang)	if lang is "fr" then		if text is "tokenCopied" then			return "L'URL pour " &amp; contactName &amp; " a été copiée dans le presse-papiers."		else if text is "okButton" then			return "OK"		else if text is "errorTokenCreation" then			return "Erreur lors de la création de l'URL : "		else if text is "errorCredentialsRetrieval" then			return "Erreur lors de la récupération des identifiants : "		else if text is "errorContactRetrieval" then			return "Erreur lors de la récupération du contact : "		else if text is "noEmailAddressProvided" then			return "Aucune adresse email fournie"		end if	else		if text is "tokenCopied" then			return "The URL for " &amp; contactName &amp; " has been copied to clipboard."		else if text is "okButton" then			return "OK"		else if text is "errorTokenCreation" then			return "Error creating token: "		else if text is "errorCredentialsRetrieval" then			return "Error retrieving credentials: "		else if text is "errorContactRetrieval" then			return "Error retrieving contact: "		else if text is "noEmailAddressProvided" then			return "No email address provided"		end if	end ifend t</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>3B2BF474-CA09-4A69-8A0E-C5A4D937B85A</string>
				<key>Keywords</key>
				<array>
					<string>Exécuter</string>
				</array>
				<key>OutputUUID</key>
				<string>FC0E55FF-5DC9-49FA-8E82-5E54F3D90778</string>
				<key>UUID</key>
				<string>2EB640DC-0903-4791-BDB6-94698229502D</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<integer>1</integer>
				<key>location</key>
				<string>371.750000:368.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>applicationBundleIDsByPath</key>
		<dict/>
		<key>applicationPaths</key>
		<array/>
		<key>backgroundColor</key>
		<data>
		YnBsaXN0MDDUAQIDBAUGBwpYJHZlcnNpb25ZJGFyY2hpdmVyVCR0b3BYJG9i
		amVjdHMSAAGGoF8QD05TS2V5ZWRBcmNoaXZlctEICVRyb290gAGpCwwXGBki
		KCkwVSRudWxs1Q0ODxAREhMUFRZWJGNsYXNzW05TQ29sb3JOYW1lXE5TQ29s
		b3JTcGFjZV1OU0NhdGFsb2dOYW1lV05TQ29sb3KACIADEAaAAoAEVlN5c3Rl
		bV8QEHN5c3RlbUdyZWVuQ29sb3LVGhsPHA0dHh8gElxOU0NvbXBvbmVudHNV
		TlNSR0JfEBJOU0N1c3RvbUNvbG9yU3BhY2VHMCAxIDAgMU8QHTAuMTM1MjUy
		ODAzNiAxIDAuMDI0ODg2ODM1MzcAEAGABYAI0yMkDSUmJ1ROU0lEVU5TSUND
		EAeABoAHTxEMSAAADEhMaW5vAhAAAG1udHJSR0IgWFlaIAfOAAIACQAGADEA
		AGFjc3BNU0ZUAAAAAElFQyBzUkdCAAAAAAAAAAAAAAAAAAD21gABAAAAANMt
		SFAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAEWNwcnQAAAFQAAAAM2Rlc2MAAAGEAAAAbHd0cHQAAAHwAAAAFGJr
		cHQAAAIEAAAAFHJYWVoAAAIYAAAAFGdYWVoAAAIsAAAAFGJYWVoAAAJAAAAA
		FGRtbmQAAAJUAAAAcGRtZGQAAALEAAAAiHZ1ZWQAAANMAAAAhnZpZXcAAAPU
		AAAAJGx1bWkAAAP4AAAAFG1lYXMAAAQMAAAAJHRlY2gAAAQwAAAADHJUUkMA
		AAQ8AAAIDGdUUkMAAAQ8AAAIDGJUUkMAAAQ8AAAIDHRleHQAAAAAQ29weXJp
		Z2h0IChjKSAxOTk4IEhld2xldHQtUGFja2FyZCBDb21wYW55AABkZXNjAAAA
		AAAAABJzUkdCIElFQzYxOTY2LTIuMQAAAAAAAAAAAAAAEnNSR0IgSUVDNjE5
		NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		AAAAAAAAAAAAAABYWVogAAAAAAAA81EAAQAAAAEWzFhZWiAAAAAAAAAAAAAA
		AAAAAAAAWFlaIAAAAAAAAG+iAAA49QAAA5BYWVogAAAAAAAAYpkAALeFAAAY
		2lhZWiAAAAAAAAAkoAAAD4QAALbPZGVzYwAAAAAAAAAWSUVDIGh0dHA6Ly93
		d3cuaWVjLmNoAAAAAAAAAAAAAAAWSUVDIGh0dHA6Ly93d3cuaWVjLmNoAAAA
		AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGRl
		c2MAAAAAAAAALklFQyA2MTk2Ni0yLjEgRGVmYXVsdCBSR0IgY29sb3VyIHNw
		YWNlIC0gc1JHQgAAAAAAAAAAAAAALklFQyA2MTk2Ni0yLjEgRGVmYXVsdCBS
		R0IgY29sb3VyIHNwYWNlIC0gc1JHQgAAAAAAAAAAAAAAAAAAAAAAAAAAAABk
		ZXNjAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4gSUVD
		NjE5NjYtMi4xAAAAAAAAAAAAAAAsUmVmZXJlbmNlIFZpZXdpbmcgQ29uZGl0
		aW9uIGluIElFQzYxOTY2LTIuMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
		dmlldwAAAAAAE6T+ABRfLgAQzxQAA+3MAAQTCwADXJ4AAAABWFlaIAAAAAAA
		TAlWAFAAAABXH+dtZWFzAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAACjwAA
		AAJzaWcgAAAAAENSVCBjdXJ2AAAAAAAABAAAAAAFAAoADwAUABkAHgAjACgA
		LQAyADcAOwBAAEUASgBPAFQAWQBeAGMAaABtAHIAdwB8AIEAhgCLAJAAlQCa
		AJ8ApACpAK4AsgC3ALwAwQDGAMsA0ADVANsA4ADlAOsA8AD2APsBAQEHAQ0B
		EwEZAR8BJQErATIBOAE+AUUBTAFSAVkBYAFnAW4BdQF8AYMBiwGSAZoBoQGp
		AbEBuQHBAckB0QHZAeEB6QHyAfoCAwIMAhQCHQImAi8COAJBAksCVAJdAmcC
		cQJ6AoQCjgKYAqICrAK2AsECywLVAuAC6wL1AwADCwMWAyEDLQM4A0MDTwNa
		A2YDcgN+A4oDlgOiA64DugPHA9MD4APsA/kEBgQTBCAELQQ7BEgEVQRjBHEE
		fgSMBJoEqAS2BMQE0wThBPAE/gUNBRwFKwU6BUkFWAVnBXcFhgWWBaYFtQXF
		BdUF5QX2BgYGFgYnBjcGSAZZBmoGewaMBp0GrwbABtEG4wb1BwcHGQcrBz0H
		TwdhB3QHhgeZB6wHvwfSB+UH+AgLCB8IMghGCFoIbgiCCJYIqgi+CNII5wj7
		CRAJJQk6CU8JZAl5CY8JpAm6Cc8J5Qn7ChEKJwo9ClQKagqBCpgKrgrFCtwK
		8wsLCyILOQtRC2kLgAuYC7ALyAvhC/kMEgwqDEMMXAx1DI4MpwzADNkM8w0N
		DSYNQA1aDXQNjg2pDcMN3g34DhMOLg5JDmQOfw6bDrYO0g7uDwkPJQ9BD14P
		eg+WD7MPzw/sEAkQJhBDEGEQfhCbELkQ1xD1ERMRMRFPEW0RjBGqEckR6BIH
		EiYSRRJkEoQSoxLDEuMTAxMjE0MTYxODE6QTxRPlFAYUJxRJFGoUixStFM4U
		8BUSFTQVVhV4FZsVvRXgFgMWJhZJFmwWjxayFtYW+hcdF0EXZReJF64X0hf3
		GBsYQBhlGIoYrxjVGPoZIBlFGWsZkRm3Gd0aBBoqGlEadxqeGsUa7BsUGzsb
		YxuKG7Ib2hwCHCocUhx7HKMczBz1HR4dRx1wHZkdwx3sHhYeQB5qHpQevh7p
		HxMfPh9pH5Qfvx/qIBUgQSBsIJggxCDwIRwhSCF1IaEhziH7IiciVSKCIq8i
		3SMKIzgjZiOUI8Ij8CQfJE0kfCSrJNolCSU4JWgllyXHJfcmJyZXJocmtybo
		JxgnSSd6J6sn3CgNKD8ocSiiKNQpBik4KWspnSnQKgIqNSpoKpsqzysCKzYr
		aSudK9EsBSw5LG4soizXLQwtQS12Last4S4WLkwugi63Lu4vJC9aL5Evxy/+
		MDUwbDCkMNsxEjFKMYIxujHyMioyYzKbMtQzDTNGM38zuDPxNCs0ZTSeNNg1
		EzVNNYc1wjX9Njc2cjauNuk3JDdgN5w31zgUOFA4jDjIOQU5Qjl/Obw5+To2
		OnQ6sjrvOy07azuqO+g8JzxlPKQ84z0iPWE9oT3gPiA+YD6gPuA/IT9hP6I/
		4kAjQGRApkDnQSlBakGsQe5CMEJyQrVC90M6Q31DwEQDREdEikTORRJFVUWa
		Rd5GIkZnRqtG8Ec1R3tHwEgFSEtIkUjXSR1JY0mpSfBKN0p9SsRLDEtTS5pL
		4kwqTHJMuk0CTUpNk03cTiVObk63TwBPSU+TT91QJ1BxULtRBlFQUZtR5lIx
		UnxSx1MTU19TqlP2VEJUj1TbVShVdVXCVg9WXFapVvdXRFeSV+BYL1h9WMtZ
		GllpWbhaB1pWWqZa9VtFW5Vb5Vw1XIZc1l0nXXhdyV4aXmxevV8PX2Ffs2AF
		YFdgqmD8YU9homH1YklinGLwY0Njl2PrZEBklGTpZT1lkmXnZj1mkmboZz1n
		k2fpaD9olmjsaUNpmmnxakhqn2r3a09rp2v/bFdsr20IbWBtuW4SbmtuxG8e
		b3hv0XArcIZw4HE6cZVx8HJLcqZzAXNdc7h0FHRwdMx1KHWFdeF2Pnabdvh3
		VnezeBF4bnjMeSp5iXnnekZ6pXsEe2N7wnwhfIF84X1BfaF+AX5ifsJ/I3+E
		f+WAR4CogQqBa4HNgjCCkoL0g1eDuoQdhICE44VHhauGDoZyhteHO4efiASI
		aYjOiTOJmYn+imSKyoswi5aL/IxjjMqNMY2Yjf+OZo7OjzaPnpAGkG6Q1pE/
		kaiSEZJ6kuOTTZO2lCCUipT0lV+VyZY0lp+XCpd1l+CYTJi4mSSZkJn8mmia
		1ZtCm6+cHJyJnPedZJ3SnkCerp8dn4uf+qBpoNihR6G2oiailqMGo3aj5qRW
		pMelOKWpphqmi6b9p26n4KhSqMSpN6mpqhyqj6sCq3Wr6axcrNCtRK24ri2u
		oa8Wr4uwALB1sOqxYLHWskuywrM4s660JbSctRO1irYBtnm28Ldot+C4WbjR
		uUq5wro7urW7LrunvCG8m70VvY++Cr6Evv+/er/1wHDA7MFnwePCX8Lbw1jD
		1MRRxM7FS8XIxkbGw8dBx7/IPci8yTrJuco4yrfLNsu2zDXMtc01zbXONs62
		zzfPuNA50LrRPNG+0j/SwdNE08bUSdTL1U7V0dZV1tjXXNfg2GTY6Nls2fHa
		dtr724DcBdyK3RDdlt4c3qLfKd+v4DbgveFE4cziU+Lb42Pj6+Rz5PzlhOYN
		5pbnH+ep6DLovOlG6dDqW+rl63Dr++yG7RHtnO4o7rTvQO/M8Fjw5fFy8f/y
		jPMZ86f0NPTC9VD13vZt9vv3ivgZ+Kj5OPnH+lf65/t3/Af8mP0p/br+S/7c
		/23//9IqKywtWiRjbGFzc25hbWVYJGNsYXNzZXNcTlNDb2xvclNwYWNloi4v
		XE5TQ29sb3JTcGFjZVhOU09iamVjdNIqKzEyV05TQ29sb3KiMS8ACAARABoA
		JAApADIANwBJAEwAUQBTAF0AYwBuAHUAgQCOAJwApACmAKgAqgCsAK4AtQDI
		ANMA4ADmAPsBAwEjASUBJwEpATABNQE7AT0BPwFBDY0Nkg2dDaYNsw22DcMN
		zA3RDdkAAAAAAAACAQAAAAAAAAAzAAAAAAAAAAAAAAAAAAAN3A==
		</data>
		<key>backgroundColorName</key>
		<string>systemGreenColor</string>
		<key>inputTypeIdentifier</key>
		<string>com.apple.Automator.text.emailAddress</string>
		<key>outputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>presentationMode</key>
		<integer>11</integer>
		<key>processesInput</key>
		<true/>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.text.emailAddress</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<true/>
		<key>systemImageName</key>
		<string>NSTouchBarCircleAdd</string>
		<key>useAutomaticInputType</key>
		<false/>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
